---
title: "Howard-Naomi-HW3"
format: html
editor: visual
---

# Link to personal repository:[Homework-3 Repository](https://github.com/naomihoward11/howard-naomi_homework-03)

# Reading in Packages

```{r}
#general use
library(tidyverse)
library(readxl)
library(here)
library(janitor)

# visualizing pairs
library(GGally)

# model selection
library(MuMIn)

# model predictions
library(ggeffects)

# model tables
library(gtsummary)
library(flextable)
library(modelsummary)

drought_exp <- read_xlsx(path = here("data", 
                                     "Valliere_etal_EcoApps_Data.xlsx"),
                         sheet = "First Harvest")

# quick look at data 
str(drought_exp)
class(drought_exp)
```

# Problem 1: Multiple Linear Regression: Model selection and Reconstruction

## 1a) Table of Models

Cleaning the data:

```{r}
#cleaning the data
drought_exp_clean <- drought_exp %>% 
  clean_names() %>% # nicer column names
  mutate(species_name = case_when( # adding column with species scientific names
    species == "ENCCAL" ~ "Encelia californica", # bush sunflower
    species == "ESCCAL" ~ "Eschscholzia californica", # California poppy
    species == "PENCEN" ~ "Penstemon centranthifolius", # Scarlet bugler
    species == "GRICAM" ~ "Grindelia camporum", # great valley gumweed
    species == "SALLEU" ~ "Salvia leucophylla", # Purple sage
    species == "STIPUL" ~ "Nasella pulchra", # Purple needlegrass
    species == "LOTSCO" ~ "Acmispon glaber" # deerweed
  )) %>% 
  relocate(species_name, .after = species) %>% # moving species_name column after species
  mutate(water_treatment = case_when( # adding column with full treatment names
    water == "WW" ~ "Well watered",
    water == "DS" ~ "Drought stressed"
  )) %>% 
  relocate(water_treatment, .after = water) # moving water_treatment column after water
```

Creating the Models:

Model 0 (null model): Total biomass is not predicted by any of these variables

```{r null-model0}
model0 <- lm(total_g ~ 1, # formula
             data = drought_exp_clean) # data frame
```

Model 1 (saturated model): Total biomass as a function of SLA, water treatment, and species

```{r saturated-model1}
# saturated model
model1 <- lm(total_g ~ sla + water_treatment + species_name,
             data = drought_exp_clean)

par(mfrow = c(2, 2))
plot(model1)

```

Model 2: Total biomass as a function of SLA and water treatment

```{r simpler-model2}
model2 <- lm(total_g ~ sla + water_treatment,
             data = drought_exp_clean)

par(mfrow = c(2, 2))
plot(model2)

```

Model 3: Total biomass as a function of SLA and species

```{r simpler-model3}
model3 <- lm(total_g ~ sla + species_name,
             data = drought_exp_clean)

par(mfrow = c(2, 2))
plot(model3)

```

Model 4: Total biomass as a function of water treatment and species

```{r simpler-model4}
model4 <- lm(total_g ~ water_treatment + species_name,
              data = drought_exp_clean)

par(mfrow = c(2, 2))
plot(model4)

```

Model Table Comparison

From the `MuMIn` package

```{r}

# Define a function to extract model details
extract_model_details <- function(model, model_name) {
  intercept <- coef(model)[1]
  predictors <- paste(names(coef(model))[-1], collapse = ", ")
  model_type <- model_name
  return(c(model_type, intercept, predictors))
}

# Extract details for each model
model_names <- c("Null", "Model 1", "Model 2", "Model 3", "Model 4")
model_list <- list(model0, model1, model2, model3, model4)
model_details <- t(mapply(extract_model_details, model_list, model_names))
colnames(model_details) <- c("Model type", "Intercept", "Predictors")

# Run model selection
model_selection <- model.sel(model0, model1, model2, model3, model4)

# Convert the model selection table to a data frame
model_selection_df <- as.data.frame(model_selection)

# Combine model details with the model selection data
combined_df <- cbind(model_details, model_selection_df)

# Convert the combined data frame to a flextable
ft <- flextable(combined_df)

# Add a caption
ft <- set_caption(ft, caption = "Figure 1: Total Biomass based Common Plant Characteristics across a Null, a Saturated, and three Simple Models")

# # Add additional styling or modifications if needed
ft <- autofit(ft)  # Automatically fit the content

# Print the flextable
print(ft)


```

## 1b) Statistical Methods

In order to examine drought tolerant plant species, a number of predictors were analyzed using a multiple linear regression model to compare how common plant predictors would influence the total plant biomass in grams. Multiple models were generated, with a null model that was created to predict no difference across all predictors, and a saturated model taking into account all predictors including water treatment, species type, and specific leaf area (SLA). After generating each model, the model that best described the total plant biomass's predicted outcome was the last simple model that had the predictors water treatment and species type. This model was the best describer of the data set because of its delta value of zero. It also has the lowest calculated AIC.

## 1c) Visualization of Data Predictions for Best Fitted Model

Create Model Prediction Data Frame

```{r model-predictions-dataframe}

model_preds <- ggpredict(model3, 
                         terms = c("sla", 
                                   "species_name"))

```

Create Model Predictions Visualization

```{r model-predictions-visualization}

# Creating new data frame of model predictions for plotting
model_preds_for_plotting <- model_preds %>% 
  rename(sla = x,  # renaming columns to make this easier to use
         species_name = group)

# Define custom colors for each species
custom_colors <- c("Encelia californica" = "skyblue", "Eschscholzia californica" = "orange", 
                   "Grindelia camporum" = "lavender", "Acmispon glaber" = "magenta",
                   "Nasella pulchra" = "lightgreen", "Penstemon centranthifolius" = "red",
                   "Salvia leucophylla" = "violet")


# Ensure `sla` is treated as a continuous variable for colors
ggplot() +
  # Underlying data
  geom_point(data = drought_exp_clean,
             aes(x = sla,
                 y = total_g,
                 color = species_name)) +
  # Model prediction 95% CI ribbon
  geom_ribbon(data = model_preds_for_plotting,
              aes(x = sla, 
                  y = predicted,
                  ymin = conf.low,
                  ymax = conf.high,
                  fill = species_name),
              alpha = 0.2) +
  # Model prediction lines
  geom_line(data = model_preds_for_plotting,
            aes(x = sla, 
                y = predicted,
                color = species_name)) +
  # Cleaner theme
  theme_classic() +
  # Creating different panels for species
  facet_wrap(~species_name)

```

## 1d) Figure 2: Total Plant Biomass predicted by species and specific leaf area with a multiple linear regression model with delta =32, AIC = -156. Reference: The dataset is from Valliere, Justin; Zhang, Jacqueline; Sharifi, M.; Rundel, Philip (2019). Data from: Can we condition native plants to increase drought tolerance and improve restoration success? \[Dataset\]. Dryad. https://doi.org/10.5061/dryad.v0861f7.

## 1e) Results Section

From comparing four multiple linear regression models to analyze certain predictors for plant stressors, it was concluded that some predictors were projected to have more influence on the total plant biomass than others within the plant species observed in the data set. From further analysis, specific leaf area and the species type were the best predictors for plant growth, which was concluded from Model 3 due to the low delta, symmetrical residuals, as well as the generated visualization.

# Problem 2: Affective Visualization

## 2a) Word Description

For my affective visualization with my personal data, I plan to compare the word count of my emails and classify my emails are formal or informal to observe if there is a signifcant difference in word count between the formal and informal emails I write. I will do this by making a heel for my formal data, and a sneaker for my informal data out of a bar graph showing the overall word count of each email classification

## 2b) Sketch of the idea

```{r image-sketch}
install.packages("png")
library(png)

# Read the image
img <- readPNG("/Users/naomihoward/Downloads/github/howard-naomi_homework-03")

# Display the image
plot(1:2, type='n')
rasterImage(img, 1, 1, 2, 2)
```

## 2c) Draft of the idea

## 2d) Artist Statement

In my piece, I am showing that there is an overall higher word count in professional emails. A deeper meaning of this could mean that in order to progress in the professional world, emails are extremely important in terms of networking, which means that in turn the messaging requires more sophistication and effort. Some of the inspiration of this was taken from Jill Pelto's paintings, which sparked the idea that data can create shapes within the art and influence its overall contents in a creative way. I painted a picture of this using water color, so the word counts could be clearly shown, and the overall structure of the art was in black pen to show the clear outlines of the shoes.

# Problem 3: Statistical Critique

## 3a) Revisit and Summarize

Note: I changed my paper analysis to after Homework 2: Have jellyfish in the Irish Sea benefited from climate change and over fishing?

The main statistical tests that they used to analyze the data include a log-linear regression model by taking the mean jellyfish catch weights, coefficients of variation, as well as the standard errors of the data collected. A linear regression model was most likely used because the authors wanted to explore mean jellyfish counts overtime, using time as a predictor for weight. The p-value and confidence interval were also included in the analysis (CI = 95%, p-value = 0.03) to demonstrate the significance of their results.

## 3b) Visual Clarity

For visual clarity of the mean weight of jellyfish per haul from the early 1990's into the 2000's, the underlying data points, error bars, and linear regression lines were bolded over the overall data model trend to highlight the actual data. The y-axis label was also flipped sideways to save space, as well as to avoid overlap with the y-axis itself. Another element that provided visual clarity was the axis tick marks, as well as going up by exponential amounts to show a better scale and overview of the log-linear regression.

## 3c) Aesthetic Clarity

A black and white minimalist theme was chosen to provide contrast and clarity, as well as to fit the overall font and color ink of the written portion of the article itself. To me, the data is the highlight of the figure, and the labels or more of a background, making the data to ink ratio quite high. Additionally, the labels on both axes were small, and same font size as the tick marks of the graph itself, so the graph itself was highlighted further.

## 3d) Recommendations
